/* eslint-disable */
/**
 * Generated `api` utility.
 *
 * THIS CODE IS AUTOMATICALLY GENERATED.
 *
 * Generated by convex@1.14.4.
 * To regenerate, run `npx convex dev`.
 * @module
 */

import type {
  ApiFromModules,
  FilterApi,
  FunctionReference,
} from "convex/server";
import type * as _tables_activities from "../_tables/activities.js";
import type * as _tables_documents from "../_tables/documents.js";
import type * as _tables_items from "../_tables/items.js";
import type * as _tables_lists from "../_tables/lists.js";
import type * as _tables_members from "../_tables/members.js";
import type * as _tables_organizations from "../_tables/organizations.js";
import type * as _tables_spaces from "../_tables/spaces.js";
import type * as _tables_tasks from "../_tables/tasks.js";
import type * as _tables_userData from "../_tables/userData.js";
import type * as _tables_userOrganizationData from "../_tables/userOrganizationData.js";
import type * as _types from "../_types.js";
import type * as auth from "../auth.js";
import type * as channels_controller from "../channels/controller.js";
import type * as documents_controller from "../documents/controller.js";
import type * as folders_controller from "../folders/controller.js";
import type * as helper from "../helper.js";
import type * as http from "../http.js";
import type * as lists_controller from "../lists/controller.js";
import type * as members_controller from "../members/controller.js";
import type * as messages_controller from "../messages/controller.js";
import type * as organizations_controller from "../organizations/controller.js";
import type * as presence from "../presence.js";
import type * as profile from "../profile.js";
import type * as requests from "../requests.js";
import type * as spaces_controller from "../spaces/controller.js";
import type * as tasks_controller from "../tasks/controller.js";
import type * as userData_controller from "../userData/controller.js";
import type * as users_controller from "../users/controller.js";

/**
 * A utility for referencing Convex functions in your app's API.
 *
 * Usage:
 * ```js
 * const myFunctionReference = api.myModule.myFunction;
 * ```
 */
declare const fullApi: ApiFromModules<{
  "_tables/activities": typeof _tables_activities;
  "_tables/documents": typeof _tables_documents;
  "_tables/items": typeof _tables_items;
  "_tables/lists": typeof _tables_lists;
  "_tables/members": typeof _tables_members;
  "_tables/organizations": typeof _tables_organizations;
  "_tables/spaces": typeof _tables_spaces;
  "_tables/tasks": typeof _tables_tasks;
  "_tables/userData": typeof _tables_userData;
  "_tables/userOrganizationData": typeof _tables_userOrganizationData;
  _types: typeof _types;
  auth: typeof auth;
  "channels/controller": typeof channels_controller;
  "documents/controller": typeof documents_controller;
  "folders/controller": typeof folders_controller;
  helper: typeof helper;
  http: typeof http;
  "lists/controller": typeof lists_controller;
  "members/controller": typeof members_controller;
  "messages/controller": typeof messages_controller;
  "organizations/controller": typeof organizations_controller;
  presence: typeof presence;
  profile: typeof profile;
  requests: typeof requests;
  "spaces/controller": typeof spaces_controller;
  "tasks/controller": typeof tasks_controller;
  "userData/controller": typeof userData_controller;
  "users/controller": typeof users_controller;
}>;
export declare const api: FilterApi<
  typeof fullApi,
  FunctionReference<any, "public">
>;
export declare const internal: FilterApi<
  typeof fullApi,
  FunctionReference<any, "internal">
>;
